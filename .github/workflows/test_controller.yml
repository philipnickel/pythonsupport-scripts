name: Test Controller

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'main_controller.yml'
      - 'MacOS/Components/Shared/config_check.sh'
      - '.github/workflows/test_controller.yml'

jobs:
  test-controller:
    name: Test Controller System
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test component disabling
        run: |
          # Create test controller with some disabled components
          cat > test_disabled.yml << 'EOF'
          macOS:
            orchestrator: disabled
            legacy: enabled
            pkg: disabled
          maintenance_mode: disabled
          EOF
          
          # Test function that reads local file
          test_component() {
              local file="$1"
              local component="$2"
              local expected="$3"
              
              local status=$(cat "$file" | grep -A 10 "^macOS:" | grep "  $component:" | awk '{print $2}')
              
              if [[ "$expected" == "disabled" && "$status" == "disabled" ]]; then
                  echo "SUCCESS: $component correctly disabled"
                  return 0
              elif [[ "$expected" == "enabled" && "$status" != "disabled" ]]; then
                  echo "SUCCESS: $component correctly enabled"  
                  return 0
              else
                  echo "ERROR: $component expected $expected but got $status"
                  return 1
              fi
          }
          
          # Test orchestrator disabled
          test_component test_disabled.yml orchestrator disabled
          
          # Test legacy enabled  
          test_component test_disabled.yml legacy enabled
          
          # Test pkg disabled
          test_component test_disabled.yml pkg disabled

      - name: Test maintenance mode
        run: |
          # Create test controller with maintenance enabled
          cat > test_maintenance.yml << 'EOF'
          macOS:
            orchestrator: enabled
            legacy: enabled
            pkg: enabled
          maintenance_mode: enabled
          maintenance_message: "System under maintenance"
          EOF
          
          # Test maintenance mode detection
          if grep -q "maintenance_mode: enabled" test_maintenance.yml; then
              echo "SUCCESS: Maintenance mode correctly detected"
          else
              echo "ERROR: Maintenance mode not detected"
              exit 1
          fi

      - name: Test actual config_check.sh script
        run: |
          # Create simple test
          cat > test_real.yml << 'EOF'
          macOS:
            orchestrator: disabled
            legacy: enabled
          maintenance_mode: disabled
          EOF
          
          # Modify the actual script to use local file for testing
          sed 's|curl -fsSL "$controller_url"|cat test_real.yml|' \
              MacOS/Components/Shared/config_check.sh > test_script.sh
          
          source test_script.sh
          
          # Test disabled component
          if check_component_enabled "orchestrator"; then
              echo "ERROR: Script should detect orchestrator as disabled"
              exit 1
          else
              echo "SUCCESS: Script correctly detects disabled component"
          fi
          
          # Test enabled component  
          if check_component_enabled "legacy"; then
              echo "SUCCESS: Script correctly allows enabled component"
          else
              echo "ERROR: Script should allow enabled component"
              exit 1
          fi